version: '3.3'
services:
  portainer:
    image: portainer/portainer:latest
    container_name: portainer
    ports:
    - '9000:9000'
    networks:
    - internal
    labels:
    - "traefik.enable=false"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - portainerdata:/data

  traefik:
    image: traefik # The official Traefik docker image
    command: --api --docker.exposedbydefault=false # Enables the web UI and tells Tr√¶fik to listen to docker, without exposing by default
    ports:
      - "80:80"     # The HTTP port
      - "8080:8080" # The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
      
  db:
    image: mysql:5
    volumes:
    - ./db:/var/lib/db
    labels:
    - "traefik.enable=false"
    networks:
    - internal
    environment:
    - MYSQL_ROOT_PASSWORD
    - MYSQL_DATABASE

  redis:
    image: redis:alpine
    networks:
    - internal
    depends_on:
    - traefik

  pet-gateway:
    build: "./pet-gateway/"
    container_name: pet-gateway
    networks:
    - internal
    - traefiknet
    labels:
    - "traefik.enable=true"
    - "traefik.frontend.rule=Host:${APP_HOST}"
    environment:
      - DB_HOST=db
      - DB_NAME=${MYSQL_DATABASE}
      - DB_USER=root
      - DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - REDIS_HOST=redis
    depends_on:
    - db
    - traefik
    - redis

  pet-porta:
    build: "./pet-porta/"
    container_name: pet-porta
    depends_on:
    - mysql
    - traefik 
    - pet-gateway
    labels:
    - "traefik.enabled=true"
    - "traefik.frontend.rule=Host:${APP_HOST}" 
    networks:
    - internal
    - traefiknet
    depends_on:
    - db
    - traefik
    - redis

networks:
  traefiknet:
    external: true
  internal:
    external: false
volumes:
  portainerdata:
  db:
