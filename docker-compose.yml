version: "3.7"
services:
  # controlador dos containers
  portainer:
    image: portainer/portainer:latest
    restart: always
    container_name: portainer
    ports:
    - "9000:9000"
    networks:
    - backend
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - portainerdata:/data
 
  # microserviço para banco de dados
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    command: --smallfiles
    volumes:
    - pet-database:/data
    #enviromnets:
    #  MONGO_INITDB_ROOT_USERNAME: ${DB_GUY}
    #  MONGO_INITDB_ROOT_PASSWORD: ${DB_SUPERKEY}
    networks:
    - backend

  # mongo-express para controle do pet-database
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-board
    restart: always
    ports:
    - ${DB_PORT}
    networks:
    - backend
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: ${DB_ADMIN}
      ME_CONFIG_BASICAUTH_PASSWORD: ${DB_KEY}
    depends_on:
    - mongo

  # microserviço para tratar todas as requisiçoes
  pet_auth:
    build: "./pet_auth/"
    container_name: pet_auth
    #image: hpbonfim/pet_auth:latest
    restart: always
    networks:
      backend:
        ipv4_address: ${NET_IP_AUTH}
    ports:
      - ${NET_PORT_AUTH}
    entrypoint:
    - '/usr/local/bin/docker-entrypoint.sh'
    depends_on:
      - mongo
      - mongo-express

  # microserviço que fornece o front-end
  pet_porta:
    build: "./pet_porta/"
    container_name: pet_porta
    #image: hpbonfim/pet_porta:latest
    restart: always
    ports:
      - ${NET_PORT_PORTA}
    networks:
      frontend: 
        ipv4_address: ${NET_IP_EXPOSE}
      backend:
        ipv4_address: ${NET_IP_PORTA}
    #depends_on:
    #  - pet_gateway

  # microserviço para tratar todas as requisiçoes
  pet_gateway:
    build: "./pet_gateway/"
    container_name: pet_gateway
    #image: hpbonfim/pet_gateway:latest
    restart: always
    networks:
      backend:
        ipv4_address: ${NET_IP_GATEWAY}
    ports:
      - ${NET_PORT_GATEWAY}
    entrypoint:
    - '/usr/local/bin/docker-entrypoint.sh'
    depends_on:
      - mongo
      - mongo-express
      
  # microserviço para ativar o arduino
  pet_arduino:
    build: "./pet_arduino/"
    container_name: pet_arduino
    #image: hpbonfim/pet_arduino:latest
    ports:
      - ${NET_PORT_ARDUINO}
    privileged: true
    devices:
    - /dev:/dev
    entrypoint:
    - "/usr/local/bin/docker-entrypoint.sh"
    networks:
      backend:
        ipv4_address: ${NET_IP_ARDUINO}

networks:
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: ${SUBNET}

  frontend:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: ${SUBNET_EXPOSED}
    
volumes:
  portainerdata:
  pet-database: